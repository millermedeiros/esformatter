#!/usr/bin/env node
"use strict";

// resolve allow us to load the locally installed esformatter instead of using
// the global version
var requireResolve = require('resolve').sync;
var path = require('path');
var dirname = path.dirname;
var pathResolve = path.resolve;

var argv = process.argv.slice(2);

// if user sets a config file we use that as the base directory to start the
// search because we assume that some settings aren't backwards compatible
// otherwise we just use the process.cwd()
var opts = require('../lib/cli.js').parse(argv);
var basedir = opts.config ?
  pathResolve(dirname(opts.config)) :
  process.cwd();

var cliPath;
try {
  cliPath = requireResolve('esformatter', {
    basedir: basedir
  });
  cliPath = pathResolve(dirname(cliPath), './cli.js');
} catch (err) {
  // fallback to this version instead
  cliPath = '../lib/cli.js';
}

var cli = require(cliPath);
// until v0.5 the cli module only exposed a single `parse` method, after v0.6
// we expose 2 methods to allow processing the data before executing the
// command (all the logic above)
if ('run' in cli) {
  process.on('exit', function(code) {
    if (code === 0 && cli.exitCode) {
      // if node detected a different error we let it use the standard error
      // code: https://nodejs.org/api/process.html#process_exit_codes
      // otherwise we make sure it's set to 1 if we had any errors
      process.exit(cli.exitCode);
    }
  });
  cli.run(cli.parse(argv));
} else {
  cli.parse(argv);
}
